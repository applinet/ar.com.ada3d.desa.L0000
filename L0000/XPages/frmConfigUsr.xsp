<?xml version="1.0" encoding="UTF-8"?>
	<!--
		Datasource - Vista: v.UI.Menu.porEstadoUsuario - Document asociado:
		f.CfgUserMenu
	-->
<xp:view xmlns:xp="http://www.ibm.com/xsp/core" xmlns:xc="http://www.ibm.com/xsp/custom"
	xmlns:xe="http://www.ibm.com/xsp/coreex">

	<xp:this.data>
		<xp:dominoDocument var="docUsuario" formName="f.CfgUserMenu"
			action="#{javascript: null == param.documentId ? 'newDocument' : 'openDocument';}"
			documentId="#{javascript: null != param.documentId ? param.documentId : null;}"
			computeWithForm="onsave">
		</xp:dominoDocument>
		<xe:objectData var="objDataEdificiosPorUsuario"
			ignoreRequestParams="true" readonly="false" scope="view">
			<xe:this.createObject><![CDATA[#{javascript:var results = []; // Crear un array vacio a devolver al final
var listaEdificios = edificioBean.getArraySrtringListaEdificios(false); //Lista total de edificios
if(listaEdificios == null){
	return results;
}

var codigoEdificio:String;
var seleccionado:String;
var edificiosSinAcceso:java.util.Vector = docUsuario.getItemValue("usr_EdificiosSinAcceso_cod");

for (var i = 0; i < listaEdificios.length; i++) {
	// Agrego la metadata por cada entrada al array:
	codigoEdificio = listaEdificios[i].split("|")[1].trim();
	seleccionado = edificiosSinAcceso.contains(codigoEdificio) ? "0" : "1";
		
    results.push({
	    codigoEdificio: codigoEdificio,
	    descripcionEdificio: "(" + codigoEdificio + ") " + listaEdificios[i].split("|")[0].trim(),
	    selected: seleccionado
    });
}

return results;}]]></xe:this.createObject>
			<xe:this.saveObject><![CDATA[#{javascript:print("saveObject");
return value.dummyAction();}]]></xe:this.saveObject>
		</xe:objectData>

	</xp:this.data>
	<!--
		Esta es la única diferencia con la Edicion que el Partial Refresh lo
		hago automatico con un custom control, pero en edicion a veces quedaba
		colgado
	-->
	
	<xp:this.resources>
		<xp:script src="/MenuTools" clientSide="false"></xp:script>
		<xp:script src="/General_SSJS.jss" clientSide="false"></xp:script>
		<xp:script src="/borrar.js" clientSide="true"></xp:script>
		<xp:styleSheet href="/bootstrap-toggle.min.css"></xp:styleSheet>
	</xp:this.resources>
	<script type="text/javascript" src="bootstraptoogle/bootstrap-toggle.min.js"></script>

	<!--
		INI Los siguientes bloques de Script son para los botones toggle
	-->
	<xp:scriptBlock id="scriptBlockUsrSeg">
		<xp:this.value><![CDATA[$(document).ready(
function() {
x$( "#{id:usrSeg}" ).bootstrapToggle({
on: 'SI',
off: 'NO',
onstyle:'success',
offstyle:'danger'
});
})]]></xp:this.value>
	</xp:scriptBlock>

	<!--
		FIN Los siguientes bloques de Script son para los botones toggle
	-->

	<xp:this.beforePageLoad><![CDATA[#{javascript://Cargo el menuFull en una Scope
menuFull("menuFull");}]]></xp:this.beforePageLoad>
	<xc:ccLayoutBootstrap property_ShowComboEdificio="true">
		<xp:this.facets>
			<xp:panel xp:key="facetMiddle" style="padding-left:20.0%;padding-right:20.0%">
				<xp:panel styleClass="alert alert-info" role="alert">
					<xp:this.rendered><![CDATA[#{javascript:userBean.accessRoles.toString().contains('[usrInitial]')}]]></xp:this.rendered>
					<xp:label id="label1">
						<xp:this.value><![CDATA[#{javascript:"El usuario actual es temporal y no podrá utilizarlo nuevamente."}]]></xp:this.value>
					</xp:label>
					<br />
					<xp:label id="label2">
						<xp:this.value><![CDATA[#{javascript:"Como primer paso deberá crear su usuario de seguridad."}]]></xp:this.value>
					</xp:label>
					<br />
					<xp:label id="label3">
						<xp:this.value><![CDATA[#{javascript:"Una vez creado este nuevo usuario, le solicitará nuevamente el ingreso."}]]></xp:this.value>
					</xp:label>
				</xp:panel>
				<xp:tabbedPanel id="tabbedPanel1" selectedTab="tabForm">
					<xp:tabPanel id="tabForm">
						<xp:this.label><![CDATA[#{javascript:return docUsuario.isNewNote() ? "Alta de Usuario" : "Usuario: " + docUsuario.getItemValueString("usr_UserMaskName_des");}]]></xp:this.label>
						<xe:formTable id="tblUsrSeg">
							<xe:this.formTitle><![CDATA[#{javascript:return docUsuario.getItemValueString("usr_Status_des") == '0'? "Usuario Inactivo" : "";}]]></xe:this.formTitle>
							<xe:formRow id="rowNombre" label="Nombre"
								labelPosition="left">
								<xp:inputText id="usr_Nombre_des" value="#{docUsuario.usr_Nombre_des}"
									required="true">
									<xp:this.validators>
										<xp:validateRequired message="El nombre es un campo requerido.">
										</xp:validateRequired>
									</xp:this.validators>
								</xp:inputText>
							</xe:formRow>
							<xe:formRow id="rowApellido" label="Apellido"
								labelPosition="left">
								<xp:inputText id="usr_Apellido_des" value="#{docUsuario.usr_Apellido_des}"
									required="true">
									<xp:this.validators>
										<xp:validateRequired message="El apellido es un campo requerido.">
										</xp:validateRequired>
									</xp:this.validators>
								</xp:inputText>
							</xe:formRow>
							<xe:formRow id="rowEmail" label="E-mail"
								labelPosition="left">
								<xp:inputText id="usr_Mail_des" value="#{docUsuario.usr_Mail_des}"
									required="true">
									<xp:this.validators>
										<xp:validateRequired
											message="La direción de correo es un campo requerido.">
										</xp:validateRequired>
										<xp:validateConstraint message="Debe ingresar un e-mail válido.">
											<xp:this.regex><![CDATA[^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$]]></xp:this.regex>
										</xp:validateConstraint>
									</xp:this.validators>
								</xp:inputText>
							</xe:formRow>

							<!--
								En el alta le muestro el campo usuario pero al grabar le agrego
								al principio el codigo de administracion. Una vez creado solo va
								a ver el campo userMask que es el nombre ingresado por el
								usuario
							-->
							<xe:formRow id="rowUserName" label="Usuario"
								labelPosition="left" rendered="#{javascript:docUsuario.isNewNote();}">
								<div class="input-group">
									<span class="input-group-addon">
										<i class="glyphicon glyphicon-user">
										</i>
									</span>
									<xp:inputText id="usr_UserName_des" value="#{docUsuario.usr_UserName_des}"
										required="true" onblur="this.value=this.value.toLowerCase();">
										<xp:this.validators>
											<xp:validateRequired
												message="El nombre de usuario es un campo requerido.">
											</xp:validateRequired>
											<xp:validateConstraint>
												<xp:this.message><![CDATA[El nombre de usuario debe ser de 5 a 20 caracteres (letras, números y guiones) y sin espacios]]></xp:this.message>
												<xp:this.regex><![CDATA[[a-z0-9\-\_]{5,20}]]></xp:this.regex>
											</xp:validateConstraint>
										</xp:this.validators>
										<xp:this.attrs>
											<xp:attr value="Usuario" name="placeHolder">
											</xp:attr>
										</xp:this.attrs>
									</xp:inputText>
								</div>
							</xe:formRow>
							<xe:formRow id="rowUserMaskName" label="Usuario"
								labelPosition="left" rendered="#{javascript:!docUsuario.isNewNote();}">
								<xp:inputText id="usr_UserMaskName_des"
									value="#{docUsuario.usr_UserMaskName_des}" readonly="true">
								</xp:inputText>
							</xe:formRow>
							<!-- La contraseña solo por primera vez -->
							<xe:formRow id="rowUserPassword" label="Contraseña"
								labelPosition="left" rendered="#{javascript:docUsuario.isNewNote();}">
								<div class="input-group">
									<span class="input-group-addon">
										<i class="glyphicon glyphicon-lock">
										</i>
									</span>
									<xp:inputText id="usr_UserPassword_des"
										value="#{docUsuario.usr_UserPassword_des}" required="true"
										disableClientSideValidation="true" password="true">
										<xp:this.validators>
											<xp:validateRequired message="Debe establecer una contraseña">
											</xp:validateRequired>
											<xp:validateExpression message="Las contraseñas deben coincidir">
												<xp:this.expression><![CDATA[#{javascript:if (getComponent("usr_UserPassword_des").getSubmittedValue() != getComponent("ConfirmPassword").getSubmittedValue()){ 
  return false; 
}else{ 
  return true; 
}      }]]></xp:this.expression>
											</xp:validateExpression>
											<xp:validateConstraint>
												<xp:this.message><![CDATA[Debe ser de 7 a 20 caracteres. Permitidos: [a-z][A-Z][0-9]]]></xp:this.message>
												<xp:this.regex><![CDATA[[a-zA-Z0-9]{7,20}]]></xp:this.regex>
											</xp:validateConstraint>
										</xp:this.validators>
										<xp:this.attrs>
											<xp:attr value="Password" name="placeHolder">
											</xp:attr>
										</xp:this.attrs>
									</xp:inputText>
								</div>
							</xe:formRow>
							<!-- Confirmación de contraseña solo por primera vez -->
							<xe:formRow id="rowConfirmUserPassword" label="Confirmar Contraseña"
								labelPosition="left" rendered="#{javascript:docUsuario.isNewNote();}">
								<div class="input-group">
									<span class="input-group-addon">
										<i class="glyphicon glyphicon-lock">
										</i>
									</span>
									<xp:inputText id="ConfirmPassword" password="true"
										required="true">
										<xp:this.validators>
											<xp:validateRequired message="Debe confirmar la contraseña">
											</xp:validateRequired>
										</xp:this.validators>
										<xp:this.attrs>
											<xp:attr value="Password" name="placeHolder">
											</xp:attr>
										</xp:this.attrs>
									</xp:inputText>
								</div>
							</xe:formRow>
							<!-- Fin Contraseña -->
							<xe:formRow id="authorRow" label="Crea este documento"
								labelPosition="left">
								<xe:this.rendered><![CDATA[#{javascript:if(userBean.accessRoles.toString().contains('[usrInitial]'))
	return false;
return true;}]]></xe:this.rendered>
								<xp:text id="author" value="#{javascript:return DocUsr.getUserMask();}">
								</xp:text>
							</xe:formRow>
							<!-- Esto es el boton Si/No de usuario de seguridad -->
							<xe:formRow id="rowUsrSeg" label="Es Usuario de Seguridad?"
								labelPosition="left">
								<xe:this.rendered><![CDATA[#{javascript:if(userBean.accessRoles.toString().contains('[usrInitial]'))
	return false;
return true;}]]></xe:this.rendered>
								<xp:checkBox text="" id="usrSeg"
									value="#{docUsuario.usr_USRSEG_opt}" checkedValue="1"
									uncheckedValue="0" defaultChecked="0">
								</xp:checkBox>



							</xe:formRow>
						</xe:formTable>
					</xp:tabPanel>
					<!-- INI PANEL de Menues -->

					<xp:tabPanel label="Menú" id="tabMenu">
						<!-- CheckBox de menues -->


						<xp:this.rendered><![CDATA[#{javascript:!userBean.accessRoles.toString().contains('[usrInitial]')}]]></xp:this.rendered>
						<xe:formRow id="checkMenues" label="Menues"
							labelPosition="left">
							<xp:div id="divCheckMenuSeguridad">
								<xp:this.rendered><![CDATA[#{javascript:getComponent("usrSeg").getValue().equals('1')}]]></xp:this.rendered>
								<xp:panel styleClass="alert alert-info" role="alert">
									<xp:label id="label6">
										<xp:this.value><![CDATA[#{javascript:"El usuario es Responsable de Seguridad. Están hablitados todos los modulos."}]]></xp:this.value>
									</xp:label>
								</xp:panel>
							</xp:div>


							<xp:div id="divCheckBoxGroup">
								<xp:this.rendered><![CDATA[#{javascript:!getComponent("usrSeg").getValue().equals('1')}]]></xp:this.rendered>

								<xp:panel id="PNL_repeatMenu">
									<xp:this.data>
										<xp:dominoView var="viewModulosCheckBox"
											viewName="vModulosCheckBox" databaseName="ADA3D/ada_config.nsf">
										</xp:dominoView>
									</xp:this.data>

									<!--
										INI repeat con los menues y en cada columna un boton tipo
										Switch
									-->

									<xp:repeat id="repeatMenu" rows="30" var="menuRowData"
										value="#{viewModulosCheckBox}" indexVar="idxRowData">
										<xp:this.facets>
											<xp:text xp:key="header" escape="false">
												<xp:this.value>
													<![CDATA[<div class="panel-group" id="accordion1">]]>
												</xp:this.value>
											</xp:text>
											<xp:text xp:key="footer" escape="false">
												<xp:this.value>
													<![CDATA[</div>]]>
												</xp:this.value>
											</xp:text>
										</xp:this.facets>

										<xp:text escape="false" id="computedTitulos">
											<xp:this.value><![CDATA[#{javascript:var list:String = "";
var etiqueta = menuRowData.getColumnValue("Modulos");
var codigoModulo = menuRowData.getColumnValue("modulo_OrdenConcatenado_des");
var largoCodigoModulo = @Length(codigoModulo);

if (largoCodigoModulo.equals(3)){
	if(idxRowData > 0){ //Si no es el primero y tiene 3 posiciones cierro tag
		list = list + "</div>"
	}
	
	list = list + "<div class=\'panel panel-default\'>" + "<div class=\'panel-heading\'><h4 class=\'panel-title\'>" +
	"<a data-toggle=\'collapse\' data-parent=\'#accordion1\' href=\'#collapse" + codigoModulo +"\'>" + etiqueta + "  </a>" +
	"</h4></div>";
}
return list}]]>

											</xp:this.value>
										</xp:text>


										<xp:text escape="false" id="computedEntry">
											<xp:this.value><![CDATA[#{javascript:var list:String = "";
var etiqueta = menuRowData.getColumnValue("Modulos");
var codigoModulo = menuRowData.getColumnValue("modulo_OrdenConcatenado_des");
var largoCodigoModulo = @Length(codigoModulo);
if (largoCodigoModulo.equals(6)){
	var codigoMenuAnterior = viewScope.menuFull.menuFull[idxRowData-1].code;
	if(@Length(codigoMenuAnterior) == 3){
		//Empiezo nueva serie de hijo
		list = list + "<div id=\'collapse" + @Left(codigoModulo, 3) + "\' class=\'panel-collapse collapse\'>";
	} 
	list = list + "<div class='\panel-body'\>"
	//Aca agregamos los 3 checkBoxes que van a postear el dato onClick
	list = list + "<input type=\'checkbox\' id=\'R" + codigoModulo + "\' name=\'" + etiqueta + "\' onclick=\'checkThisId(this.id)\' checked value=\'" + codigoModulo + "\'/>&nbsp" 
	list = list + "<input type=\'checkbox\' id=\'C" + codigoModulo + "\' name=\'" + etiqueta + "\' onclick=\'checkThisId(this.id)\' checked value=\'" + codigoModulo + "\'/>&nbsp"
	list = list + "<input type=\'checkbox\' id=\'U" + codigoModulo + "\' name=\'" + etiqueta + "\' onclick=\'checkThisId(this.id)\' checked value=\'" + codigoModulo + "\'/>&nbsp"
	list = list + "<input type=\'checkbox\' id=\'D" + codigoModulo + "\' name=\'" + etiqueta + "\' onclick=\'checkThisId(this.id)\' checked value=\'" + codigoModulo + "\'/>&nbsp"
	list = list + etiqueta + "</div>" 
	if(viewScope.menuFull.menuFull.size() == idxRowData+1){
		list = list + "</div>";//Fin
	}else{
		var codigoMenuSiguiente = viewScope.menuFull.menuFull[idxRowData+1].code;
		if(@Length(codigoMenuSiguiente) == 3){
			//Finaliza esta serie de hijo
			list = list + "</div>";
		}
	}	
}
return list;}]]>
											</xp:this.value>
										</xp:text>

									</xp:repeat>
									<!--
										FIN repeat con los menues y en cada columna un boton tipo
										Switch
									-->

								</xp:panel>


								<xp:checkBoxGroup id="checkBoxGroup1" layout="pageDirection"
									value="#{docUsuario.usr_MenuSelected_cod}" rendered="true">
									<xp:selectItems id="itemSelected">
										<xp:this.value><![CDATA[#{javascript:var confDb:NotesDatabase = getDbCfg();
var dbConf = new Array(@DbName()[0], confDb.getFilePath());
@DbColumn(dbConf, "vModulosCheckBox", 2)}]]></xp:this.value>
									</xp:selectItems>

								</xp:checkBoxGroup>

							</xp:div>
						</xe:formRow>
					</xp:tabPanel>
					<!-- FIN PANEL de Menues -->
					<!-- INI PANEL de Edificios -->
					<xp:tabPanel label="Edificios" id="tabEdificios"
						rendered="#{javascript:!docUsuario.isNewNote()}">

						<xp:panel id="PNL_edificios">
							<xp:messages id="messagesPNLEdificios"></xp:messages>
							<xp:text escape="false">
								<xp:this.value><![CDATA[#{javascript:"<tbody>"}]]></xp:this.value>
							</xp:text>
							<xp:table styleClass="table-hover">
								<xp:repeat id="repeatEdificiosPorUsuario" rows="50"
									var="rptEdificiosPorUsuario" style="width:400px"
									value="#{objDataEdificiosPorUsuario}" indexVar="idxEdificios">

									<xp:this.facets>
										<xp:panel xp:key="header">
											<xp:pager layout="Previous Group Next" id="pagerHeader">
											</xp:pager>
											<xp:text escape="false">
												<xp:this.value><![CDATA[#{javascript:"<tbody>"}]]></xp:this.value>
											</xp:text>
										</xp:panel>
										<xp:panel xp:key="footer">
											<xp:text escape="false">
												<xp:this.value><![CDATA[#{javascript:"</tbody>"}]]></xp:this.value>
											</xp:text>
										</xp:panel>
									</xp:this.facets>
									<xp:tr>
										<xp:td>
											<xp:checkBox value="#{rptEdificiosPorUsuario.selected}"
												id="checkBox1" text="#{rptEdificiosPorUsuario.descripcionEdificio}"
												checkedValue="1" uncheckedValue="0"
												readonly="#{javascript:!docUsuario.isEditable()}">
											</xp:checkBox>
										</xp:td>
									</xp:tr>
								</xp:repeat>
							</xp:table>

						</xp:panel>
					</xp:tabPanel>
					<!-- FIN PANEL de Edificios -->
					<xp:tabPanel label="Log" id="tabLog"
						rendered="#{javascript:!docUsuario.isNewNote()}">
						<xc:ccLog docToEditCCLog="#{javascript:docUsuario}">
						</xc:ccLog>
					</xp:tabPanel>
				</xp:tabbedPanel>

				<!-- PANEL DE BOTONES  -->
				<xp:panel id="buttonPanelRow" styleClass="buttonPanel">
					<xp:button value="Grabar" id="btnSave" styleClass="btn-success">
						<xp:this.rendered><![CDATA[#{javascript:if(userBean.accessRoles.toString().contains('[usrInitial]'))
	return docUsuario.isEditable() 

if (docUsuario.isEditable() && docUsuario.isNewNote()){ //Solo lo muestro en el segundo panel
	var panel:com.ibm.xsp.component.xp.XspTabbedPanel = getComponent('tabbedPanel1');
	if (panel.getSelectedTab().equals('tabForm'))
		return false;
}
return docUsuario.isEditable() }]]>
						</xp:this.rendered>
						<xp:eventHandler event="onclick" submit="true"
							refreshMode="partial">
							<xp:this.action><![CDATA[#{javascript:print("btnSave Usuario");
	
	var isNew:boolean = docUsuario.isNewNote(); 
	if (isNew){
		if(userBean.accessRoles.toString().contains('[usrInitial]'))
			docUsuario.setValue("usr_USRSEG_opt","1");
		setLog (docUsuario, "Creación del usuario " + docUsuario.getItemValueString("usr_UserMaskName_des"), "log_des");
		docUsuario.setValue("usr_UserName_des", DocUsr.getUserDB() + docUsuario.getItemValueString("usr_UserName_des"));
	}
	if(docUsuario.getItemValueString("usr_USRSEG_opt").equals("1")){
		setLog (docUsuario, "El usuario se guardó con atribuciones de seguridad", "log_des");
	}else{
		setLog (docUsuario, "Cambios guardados, el usuario no tiene atribuciones de seguridad", "log_des");
	}
	//INI - Grabo el resultado del objDataEdificiosPorUsuario en el campo
	var edificioNoSeleccionado = [];
	for (var i = 0; i < objDataEdificiosPorUsuario.length; i++) {
		var eachRequest = objDataEdificiosPorUsuario[i];
	    if (eachRequest.selected == "0") {
	    	edificioNoSeleccionado.push(eachRequest.codigoEdificio);
	    }
	}
	//Voy a grabar solo si se modificó el objeto
	docUsuario.setValue("usr_EdificiosSinAcceso_cod", edificioNoSeleccionado);
	if(edificioNoSeleccionado.toString() != ""){
		setLog (docUsuario, "Edificios sin acceso: " + edificioNoSeleccionado.toString(), "log_des");
	}else{
		setLog (docUsuario, "El usuario se guardó con acceso a todos los edificios" , "log_des");
	}
	
	//FIN - Grabo el resultado del objDataEdificiosPorUsuario en el campo
	docUsuario.save();
	
	if (isNew){
		session.getCurrentDatabase().getAgent("a.ObtCorr").runWithDocumentContext(docUsuario.getDocument());
		session.getCurrentDatabase().getAgent("a.NewUserExt").runWithDocumentContext(docUsuario.getDocument());
	}
	
	if(userBean.accessRoles.toString().contains('[usrInitial]')){
		var docDummy:NotesDocument = database.createDocument();
		docDummy.appendItemValue("acl_usrInit", session.getEffectiveUserName());
		session.getCurrentDatabase().getAgent("a.NaUsrInit").runWithDocumentContext(docDummy);
		/*Fuerzo un logOut*/
		sessionScope.remove("menuList");
		var appUrl = facesContext.getExternalContext().getRequest().getContextPath();
		var url = appUrl + "?logout&redirectto=" + appUrl ;
		facesContext.getExternalContext().redirect(url);
		facesContext.getExternalContext().getSession(false).invalidate();
	}else{
		context.redirectToPage(getOpcionesClave("VIEW_UI_USUARIOS_HOME", "codigo")[0]);
	}
}]]></xp:this.action>
						</xp:eventHandler>
					</xp:button>
					<xp:button value="Editar" id="btnEdit">
						<xp:this.rendered>
							<![CDATA[#{javascript:return (userBean.accessLevel >= lotus.domino.ACL.LEVEL_EDITOR) && !docUsuario.isEditable() &&
!docUsuario.getItemValueString("usr_Status_des").equals('0');}]]>
						</xp:this.rendered>
						<xp:eventHandler event="onclick" submit="true"
							refreshMode="complete">
							<xp:this.action>
								<xp:changeDocumentMode mode="edit" var="docUsuario">
								</xp:changeDocumentMode>
							</xp:this.action>
						</xp:eventHandler>
					</xp:button>
					<xp:button value="Cerrar" id="btnClose" styleClass="btn">
						<xp:eventHandler event="onclick" submit="true"
							refreshMode="complete" immediate="true">
							<xp:this.action>
								<xp:openPage>
									<xp:this.name><![CDATA[#{javascript:return getOpcionesClave("VIEW_UI_USUARIOS_HOME", "codigo")[0];}]]></xp:this.name>
								</xp:openPage>
							</xp:this.action>
						</xp:eventHandler>
					</xp:button>
					<xp:button value="Inhabilitar Usuario" id="btnInhabilitar"
						styleClass="btn-danger">
						<xp:this.rendered>
							<![CDATA[#{javascript:return !viewScope.isNew && docUsuario.getItemValueString("usr_Status_des").equals("1")}]]>
						</xp:this.rendered>
						<xp:eventHandler event="onclick" submit="true"
							refreshMode="complete">
							<xp:this.action><![CDATA[#{javascript:try{	
	docUsuario.replaceItemValue("usr_Status_des", "0");
	docUsuario.replaceItemValue("usr_USRSEG_opt", "0");
	setLog (docUsuario, "El usuario se ha inhabilitado y se le ha quitado el atributo de seguridad", "log_des");
	docUsuario.save();
	context.redirectToPage(getOpcionesClave("VIEW_UI_USUARIOS_HOME", "codigo")[0]);
} catch(e) {
        addFacesMessage(e.toString(), null, "FATAL")
 }}]]></xp:this.action>
							<xp:this.script><![CDATA[return confirm("Con esta acción ademas de inhabilitarlo le quitará los permisos de seguridad. Confirma?")]]></xp:this.script>
						</xp:eventHandler>
					</xp:button>
					<xp:button value="Habilitar Usuario" id="btnHabilitar"
						styleClass="btn-info">
						<xp:this.rendered>
							<![CDATA[#{javascript:return !viewScope.isNew && docUsuario.getItemValueString("usr_Status_des").equals("0")}]]>
						</xp:this.rendered>
						<xp:eventHandler event="onclick" submit="true"
							refreshMode="complete">
							<xp:this.action><![CDATA[#{javascript:try{
	docUsuario.replaceItemValue("usr_Status_des", "1");
	setLog (docUsuario, "El usuario se ha habilitado", "log_des");
	docUsuario.save();
	context.redirectToPage(getOpcionesClave("VIEW_UI_USUARIOS_HOME", "codigo")[0]);
} catch(e) {
        addFacesMessage(e.toString(), null, "FATAL")
 }}]]></xp:this.action>
							<xp:this.script><![CDATA[return confirm("Si el usuario que habilita era un usuario de seguridad, deberá marcar nuevamente sus privilegios de seguridad ya que fueron quitados al inhabilitarlo");]]></xp:this.script>
						</xp:eventHandler>
					</xp:button>

					<xp:button value="Continuar" id="btnContinuar"
						styleClass="btn-success">
						<xp:this.rendered><![CDATA[#{javascript:if(userBean.accessRoles.toString().contains('[usrInitial]'))
	return false;
var panel:com.ibm.xsp.component.xp.XspTabbedPanel = getComponent('tabbedPanel1');
if (panel.getSelectedTab().equals('tabMenu'))
	return false;
docUsuario.isNewNote()}]]></xp:this.rendered>
						<xp:eventHandler event="onclick" submit="true"
							refreshMode="partial">
							<xp:this.action><![CDATA[#{javascript:try{
	var user = DocUsr.getUserDB() + docUsuario.getItemValueString("usr_UserName_des");
	if(isUserNameAvailable(user)){
		//Si el usuario está disponible paso al siguiente panel
		var panel:com.ibm.xsp.component.xp.XspTabbedPanel = getComponent('tabbedPanel1');
		panel.setSelectedTab('tabMenu');
	}else{
		addFacesMessage( "El nombre de usuario " + docUsuario.getItemValueString("usr_UserName_des") + " se encuentra activo, verificar en la lista de usuario.", getComponent('usr_UserName_des'), 'FATAL' );
	}
} catch(e) {
        addFacesMessage(e.toString(), null, "FATAL")
}}]]></xp:this.action>
							<!--
								fixme: lo comento para una prueba
								<xp:this.onComplete><![CDATA[XSP.partialRefreshGet("#{id:buttonPanelRow}");]]></xp:this.onComplete>
							-->
						</xp:eventHandler>
					</xp:button>
					<xp:button value="Cambiar contraseña" id="btnChangePassword"
						styleClass="btn-warning">
						<xp:this.rendered><![CDATA[#{javascript:if(docUsuario.isNewNote())
	return false;
if(userBean.accessRoles.toString().contains('[usrInitial]'))
	return false;
if(docUsuario.isEditable())
	return false;	
return true;}]]></xp:this.rendered>

						<xp:eventHandler event="onclick" submit="true"
							refreshMode="complete">
							<xp:this.action>
								<xp:openPage name="/frmConfigUsrChgPwd.xsp" target="openDocument"
									documentId="#{javascript:docUsuario.getDocument().getUniversalID()}">
								</xp:openPage>
							</xp:this.action>
						</xp:eventHandler>
					</xp:button>
			<xc:ccFxPleaseWaitStandBy></xc:ccFxPleaseWaitStandBy>
				</xp:panel><!-- FIN PANEL DE BOTONES  -->
			</xp:panel><!-- FIN PANEL MIDDLE  -->
		</xp:this.facets>
	</xc:ccLayoutBootstrap>

</xp:view>